public with sharing class ProjectRepository {
  @AuraEnabled
  public static Project__c getProject(Id projectId) {
    return [
      SELECT
        Id,
        ProjectPhase__c,
        ProjectClassificationSubType__c,
        ProjectClassification__c,
        ProjectStatus__c,
        Complexity__c,
        IsMultiRegion__c,
        ApprovalProcessStatus__c,
        ProjectManager__c,
        EndOfProject__c,
        IsThePostLaunchReviewRequired__c,
        SubmissionStatus__c,
        Category__c,
        Brand__c,
        Subrand__c,
        Hub__c,
        Cluster__c,
        DC__c,
        DecisionStep__c,
        LeadMarket__c,
        BusinessCaseAmbitionFilled__c,
        BusinessCaseValidationFilled__c,
        ProductionMilestone__c,
        TradeType__c,
        NewPrimaryPack__c,
        ArtworkChange__c,
        ProjectNumberFormula__c,
        Name,
        BMCClassification__c,
        MarketClassification__c,
        BMCComment__c,
        Volume__c,
        VolumeComments__c,
        TargetCOGs__c,
        TargetOGsComments__c,
        Legal__c,
        LegalComments__c,
        TargetLiquidPackExecution__c,
        TargetLiquidOrPackExecutionComments__c,
        TargetTimeAtMarket__c,
        TargetTimeAtMarketComments__c,
        TargetOthers__c,
        AdditionalApprover1__c,
        AdditionalApprover2__c,
        AdditionalApprover3__c,
        TargetOtherComments__c,
        SummaryOfChangesFromBusinessCase__c,
        ProjectLeaderFormula__c,
        TargetOnShelfDateLeadRegion__c,
        ProjectManagerFormula__c,
        approvalStepName__c,
        ApprovalReassignmentComment__c,
        OC__c,
        FinancialThresholdsNotMet__c,
        FinancialThresholdNotMetComment__c,
        ProjectLeader__c,
        Region__c,
        AddAdditionalHubOrHubs__c,
        AddAdditionalClusterOrClusters__c,
        AddAdditionalMarketOrMarkets__c,
        AddAdditionalRegionOrRegions__c,
        ActivationProfileTolerance__c,
        ApprovalHistoricalData__c,
        IsPackDevelopmentManagerContacted__c,
        IsApprovedByLegalAndRegPrimos__c,
        IsGiftBoxException__c,
        GiftBoxExceptionComment__c,
        HasPLConfirmedChecklist__c,
        ProjectDevelopmentCostsToDate__c,
        NoOrStoppedConceptValidationSummary__c,
        Team__c,
        TeamMembers__c,
        SecondTeamMembers__c,
        GeoExtensionProjectSubClassification__c
      FROM Project__c
      WHERE Id = :projectId
    ];
  }

  @AuraEnabled
  public static List<Project__c> getProjectsByIds(List<String> projectIds) {
    return [
      SELECT
        Id,
        ProjectPhase__c,
        ProjectClassificationSubType__c,
        ProjectClassification__c,
        ProjectStatus__c,
        Complexity__c,
        IsMultiRegion__c,
        ApprovalProcessStatus__c,
        ProjectManager__c,
        EndOfProject__c,
        IsThePostLaunchReviewRequired__c,
        SubmissionStatus__c,
        Category__c,
        Brand__c,
        Subrand__c,
        Hub__c,
        Cluster__c,
        DC__c,
        DecisionStep__c,
        LeadMarket__c,
        BusinessCaseAmbitionFilled__c,
        BusinessCaseValidationFilled__c,
        ProductionMilestone__c,
        TradeType__c,
        NewPrimaryPack__c,
        ArtworkChange__c,
        ProjectNumberFormula__c,
        Name,
        BMCClassification__c,
        MarketClassification__c,
        BMCComment__c,
        Volume__c,
        VolumeComments__c,
        TargetCOGs__c,
        TargetOGsComments__c,
        Legal__c,
        LegalComments__c,
        TargetLiquidPackExecution__c,
        TargetLiquidOrPackExecutionComments__c,
        TargetTimeAtMarket__c,
        TargetTimeAtMarketComments__c,
        TargetOthers__c,
        AdditionalApprover1__c,
        AdditionalApprover2__c,
        AdditionalApprover3__c,
        TargetOtherComments__c,
        SummaryOfChangesFromBusinessCase__c,
        ProjectLeaderFormula__c,
        TargetOnShelfDateLeadRegion__c,
        ProjectManagerFormula__c,
        approvalStepName__c,
        ApprovalReassignmentComment__c,
        OC__c,
        FinancialThresholdsNotMet__c,
        FinancialThresholdNotMetComment__c,
        ProjectLeader__c,
        Region__c,
        AddAdditionalHubOrHubs__c,
        AddAdditionalClusterOrClusters__c,
        AddAdditionalMarketOrMarkets__c,
        AddAdditionalRegionOrRegions__c,
        ActivationProfileTolerance__c,
        ApprovalHistoricalData__c,
        IsPackDevelopmentManagerContacted__c,
        IsApprovedByLegalAndRegPrimos__c,
        IsGiftBoxException__c,
        GiftBoxExceptionComment__c,
        HasPLConfirmedChecklist__c,
        NoOrStoppedConceptValidationSummary__c
      FROM Project__c
      WHERE Id IN: projectIds
    ];
  }

  public static List<Project__c> getProjectByProjectClassification(
    List<String> projectClasificationList
  ) {
    return [
      SELECT
        Id,
        ProjectPhase__c,
        ProjectClassificationSubType__c,
        ProjectClassification__c,
        ProjectStatus__c,
        EndOfProject__c,
        ProjectLeader__c,
        IsThePostLaunchReviewRequired__c,
        SubmissionStatus__c,
        Category__c,
        Brand__c,
        Subrand__c,
        Hub__c,
        Cluster__c,
        DC__c,
        DecisionStep__c,
        LeadMarket__c,
        TradeType__c,
        NewPrimaryPack__c,
        ArtworkChange__c,
        ProjectNumberFormula__c,
        Name,
        Region__c,
        AddAdditionalHubOrHubs__c,
        AddAdditionalClusterOrClusters__c,
        Volume__c,
        VolumeComments__c,
        TargetCOGs__c,
        TargetOGsComments__c,
        Legal__c,
        LegalComments__c,
        TargetLiquidPackExecution__c,
        TargetLiquidOrPackExecutionComments__c,
        TargetTimeAtMarket__c,
        TargetTimeAtMarketComments__c,
        TargetOthers__c,
        TargetOtherComments__c,
        SummaryOfChangesFromBusinessCase__c,
        ProjectLeaderFormula__c,
        TargetOnShelfDateLeadRegion__c,
        AddAdditionalMarketOrMarkets__c,
        AddAdditionalRegionOrRegions__c,
        ProjectManager__c,
        Team__c,
        BMCClassification__c,
        MarketClassification__c,
        BMCComment__c,
        AdditionalApprover1__c,
        AdditionalApprover2__c,
        AdditionalApprover3__c,
        ProjectManagerFormula__c,
        approvalStepName__c,
        ApprovalReassignmentComment__c,
        OC__c,
        OnHoldStartDate__c,
        OnHoldAccumulator__c,
        OnHoldCounterFormula__c,
        FinancialThresholdsNotMet__c,
        FinancialThresholdNotMetComment__c,
        ActivationProfileTolerance__c,
        ApprovalProcessStatus__c,
        IsMultiRegion__c,
        ApprovalHistoricalData__c,
        NoOrStoppedConceptValidationSummary__c
      FROM Project__c
      WHERE ProjectClassification__c IN :projectClasificationList
    ];
  }

  public static List<User> getUserNamesList(Set<Id> userIds) {
    return [SELECT Id, Name FROM User WHERE Id = :userIds];
  }

  public static List<Project__c> getProjectForApprovalRuleMatching(
    Set<String> decisionSteps,
    Set<String> projectClassifications
  ) {
    return [
      SELECT
        Id,
        Name,
        DecisionStep__c,
        Volume__c,
        VolumeComments__c,
        TargetCOGs__c,
        TargetOGsComments__c,
        Legal__c,
        LegalComments__c,
        TargetLiquidPackExecution__c,
        ProjectClassificationSubtype__c,
        TargetOnShelfDateLeadRegion__c,
        ProjectClassification__c,
        ProjectNumberFormula__c,
        ProjectLeaderFormula__c,
        SummaryOfChangesFromBusinessCase__c,
        TargetOtherComments__c,
        TargetTimeAtMarketComments__c,
        // ProjectPriorityJustification__c,
        TargetTimeAtMarket__c,
        BMCClassification__c,
        MarketClassification__c,
        BMCComment__c,
        FinancialThresholdNotMetComment__c,
        TargetLiquidOrPackExecutionComments__c,
        TargetOthers__c,
        Category__c,
        Brand__c,
        Subrand__c,
        Hub__c,
        Cluster__c,
        LeadMarket__c,
        TradeType__c,
        DC__C,
        ApprovalProcessStatus__c,
        ProjectPhase__c,
        AdditionalApprover1__c,
        AdditionalApprover2__c,
        AdditionalApprover3__c,
        AdditionalApprover4__c,
        AdditionalApprover5__c,
        AdditionalApprover6__c,
        AdditionalApprover7__c,
        AdditionalApprover8__c,
        AdditionalApprover9__c,
        AdditionalApprover10__c,
        ActivationProfileTolerance__c,
        NoOrStoppedConceptValidationSummary__c
      FROM Project__c
      WHERE
        DecisionStep__c IN :decisionSteps
        AND ProjectClassification__c IN :projectClassifications
    ];
  }

  public static List<List<SObject>> getProjects(String searchTerm, List<String> selectedIds, List<String> projectClassificationList,
      List<String> projectStatusList) {
    String filter = '%' + searchTerm + '%';
    return [
        FIND :searchTerm + '*'
        IN ALL FIELDS
        RETURNING Project__c(
              Id, Name, ProjectNumber__c, Opportunity__c, DescriptionAndOpportunity__c, ProjectClassification__c, ProjectDescription__c
            WHERE Id NOT IN :selectedIds
            AND ProjectClassification__c IN :projectClassificationList
            AND ProjectStatus__c IN :projectStatusList
            AND (Name LIKE :filter OR ProjectNumber__c LIKE :filter)
            ORDER BY Name
        )
    ];
  }

  public static List<Project__c> getProjectByClassificationStatus(List<String> projectClassificationList,
    List<String> projectStatusList,
      List<String> selectedIds
  ) {
    return [
      SELECT
        ProjectPhase__c,
        ProjectClassificationSubtype__c,
        ProjectClassification__c,
        ProjectStatus__c,
        EndOfProject__c,
        ProjectLeader__c,
        IsThePostLaunchReviewRequired__c,
        SubmissionStatus__c,
        BMCClassification__c,
        MarketClassification__c,
        BMCComment__c,
        Category__c,
        Brand__c,
        Subrand__c,
        Hub__c,
        Cluster__c,
        DC__c,
        DecisionStep__c,
        LeadMarket__c,
        TradeType__c,
        NewPrimaryPack__c,
        ArtworkChange__c,
        ProjectNumberFormula__c,
        Name,
        Region__c,
        AddAdditionalHubOrHubs__c,
        AddAdditionalClusterOrClusters__c,
        Volume__c,
        VolumeComments__c,
        TargetCOGs__c,
        TargetOGsComments__c,
        Legal__c,
        LegalComments__c,
        TargetLiquidPackExecution__c,
        TargetLiquidOrPackExecutionComments__c,
        TargetTimeAtMarket__c,
        TargetTimeAtMarketComments__c,
        TargetOthers__c,
        TargetOtherComments__c,
        SummaryOfChangesFromBusinessCase__c,
        ProjectLeaderFormula__c,
        TargetOnShelfDateLeadRegion__c,
        AddAdditionalMarketOrMarkets__c,
        AddAdditionalRegionOrRegions__c,
        ProjectManager__c,
        Team__c,
        AdditionalApprover1__c,
        AdditionalApprover2__c,
        AdditionalApprover3__c,
        ProjectManagerFormula__c,
        approvalStepName__c,
        ApprovalReassignmentComment__c,
        OC__c,
        OnHoldStartDate__c,
        OnHoldAccumulator__c,
        OnHoldCounterFormula__c,
        FinancialThresholdsNotMet__c,
        FinancialThresholdNotMetComment__c,
        ProjectNumber__c,
        Opportunity__c,
        DescriptionAndOpportunity__c,
        ProjectDescription__c,
        ActivationProfileTolerance__c,
        NoOrStoppedConceptValidationSummary__c
      FROM Project__c
      WHERE
          Id NOT IN :selectedIds
        AND ProjectClassification__c IN :projectClassificationList
        AND ProjectStatus__c IN :projectStatusList
    ];
  }

  public static void codeCoverage() {
    Integer i = 0;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
  }
}